{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/errorBoundary/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { ReactElement, ReactNode } from 'react';\n\nimport type { PushErrorOptions } from '@grafana/faro-web-sdk';\n\nexport type ReactNodeRender = () => ReactNode;\n\nexport type ReactProps = Record<string, any>;\n\nexport type FaroErrorBoundaryFallbackRender = (error: Error, resetError: VoidFunction) => ReactElement;\n\nexport interface FaroErrorBoundaryProps {\n  beforeCapture?: (error: Error | null) => void;\n  children?: ReactNode | ReactNodeRender;\n  fallback?: ReactElement | FaroErrorBoundaryFallbackRender;\n  onError?: (error: Error) => void;\n  onMount?: VoidFunction;\n  onReset?: (error: Error | null) => void;\n  onUnmount?: (error: Error | null) => void;\n  pushErrorOptions?: PushErrorOptions;\n}\n\nexport interface FaroErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n}\n"]}