{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/router/v6/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { ReactElement, ReactNode } from 'react';\n\nimport type { ReactRouterLocation } from '../types';\n\ninterface IndexRouteObjectV6DataRouter {\n  caseSensitive?: boolean;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  index: true;\n  path?: string;\n}\n\nexport interface NonIndexRouteObjectV6DataRouter {\n  caseSensitive?: boolean;\n  children?: RouteObjectV6DataRouter[];\n  element?: React.ReactNode | null;\n  index?: false;\n  path?: string;\n}\n\nexport type RouteObjectV6DataRouter = IndexRouteObjectV6DataRouter | NonIndexRouteObjectV6DataRouter;\n\nexport interface ReactRouterV6BaseRouteObject {\n  action?: (...args: any[]) => any;\n  caseSensitive?: boolean;\n  hasErrorBoundary?: boolean;\n  handle?: any;\n  id?: string;\n  loader?: (...args: any[]) => any;\n  path?: string;\n  shouldRevalidate?: (...args: any[]) => any;\n}\n\nexport type ReactRouterV6RouteObject = ReactRouterV6BaseRouteObject &\n  (\n    | {\n        children?: undefined;\n        index: true;\n      }\n    | {\n        children?: ReactRouterV6RouteObject[];\n        index?: false;\n      }\n  );\n\nexport interface ReactRouterV6RoutesProps {\n  children?: ReactNode;\n  location?: Partial<ReactRouterLocation> | string;\n  routesComponent?: ReactRouterV6RoutesShape;\n}\n\nexport type ReactRouterV6Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\nexport interface ReactRouterV6RouteMatch<ParamKey extends string = string> {\n  params: ReactRouterV6Params<ParamKey>;\n  pathname: string;\n  pathnameBase: string;\n  route: ReactRouterV6RouteObject;\n}\n\nexport type ReactRouterV6CreateRoutesFromChildren = (\n  children: ReactNode\n) => ReactRouterV6RouteObject[] | RouteObjectV6DataRouter[];\n\nexport type ReactRouterV6MatchRoutes = (\n  routes: ReactRouterV6RouteObject[],\n  location: Partial<ReactRouterLocation> | string,\n  basename?: string | undefined\n) => ReactRouterV6RouteMatch[] | null;\n\nexport type ReactRouterV6RoutesShape = (props: ReactRouterV6RoutesProps) => ReactElement | null;\n\nexport type ReactRouterV6UseLocation = () => ReactRouterLocation;\n\nexport type ReactRouterV6UseNavigationType = () => 'POP' | 'PUSH' | 'REPLACE';\n\nexport interface ReactRouterV6Dependencies {\n  createRoutesFromChildren: ReactRouterV6CreateRoutesFromChildren;\n  matchRoutes: ReactRouterV6MatchRoutes;\n  Routes: ReactRouterV6RoutesShape;\n  useLocation: ReactRouterV6UseLocation;\n  useNavigationType: ReactRouterV6UseNavigationType;\n}\n\nexport interface ReactRouterV6DataRouterDependencies {\n  matchRoutes: ReactRouterV6MatchRoutes;\n}\n\nexport type EventRouteTransitionAttributes = {\n  fromRoute?: string;\n  fromUrl?: string;\n};\n"]}