{"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["../../src/instrumentation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,sDAAqE;AAErE,+CAAiD;AACjD,mCAAgE;AAGhE;IAAsC,oCAAmB;IAIvD,0BAAoB,OAAoC;QAApC,wBAAA,EAAA,YAAoC;QACtD,YAAA,MAAK,WAAE,SAAC;QADU,aAAO,GAAP,OAAO,CAA6B;QAHxD,UAAI,GAAG,qBAAqB,CAAC;QAC7B,aAAO,GAAG,sBAAO,CAAC;;IAIlB,CAAC;IAED,qCAAU,GAAV;QACE,IAAA,8BAAe,EAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAA,6CAAoC,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrD,CAAC;IACH,uBAAC;AAAD,CAAC,AAZD,CAAsC,kCAAmB,GAYxD;AAZY,4CAAgB","sourcesContent":["import { BaseInstrumentation, VERSION } from '@grafana/faro-web-sdk';\n\nimport { setDependencies } from './dependencies';\nimport { initializeReactRouterInstrumentation } from './router';\nimport type { ReactIntegrationConfig } from './types';\n\nexport class ReactIntegration extends BaseInstrumentation {\n  name = '@grafana/faro-react';\n  version = VERSION;\n\n  constructor(private options: ReactIntegrationConfig = {}) {\n    super();\n  }\n\n  initialize(): void {\n    setDependencies(this.internalLogger, this.api);\n    initializeReactRouterInstrumentation(this.options);\n  }\n}\n"]}